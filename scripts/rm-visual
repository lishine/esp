#!/usr/bin/env bash
# Interactive visual file removal tool for ESP32
# Uses dialog for interactive selection with hierarchical view

if ! command -v dialog &> /dev/null; then
    echo "Error: dialog is not installed but required by this script."
    echo "Please install dialog using one of the following methods:"
    echo "  - macOS: brew install dialog"
    echo "  - Ubuntu/Debian: sudo apt-get install dialog"
    echo "  - Fedora/RHEL: sudo dnf install dialog"
    exit 1
fi

if ! command -v jq &> /dev/null; then
    echo "Error: jq is not installed but required by the run script."
    echo "Please install jq using one of the following methods:"
    echo "  - macOS: brew install jq"
    echo "  - Ubuntu/Debian: sudo apt-get install jq"
    echo "  - Fedora/RHEL: sudo dnf install jq"
    exit 1
fi

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Parse arguments
RUN_ARGS=""
if [[ "$1" == "--ap" ]]; then
    RUN_ARGS="--ap"
    echo "Using AP IP address: 192.168.4.1" # Assuming ./run handles the IP lookup
    echo "Launching visual file removal..."
fi

TEMP_FILE=$(mktemp)
SELECTED_FILES=$(mktemp)
JSON_FILE=$(mktemp)

echo "Fetching file list from ESP32..."
FILE_LIST=$(./run $RUN_ARGS fs-list 2>&1)
echo this echo help the dialog not duplicate files on scroll $FILE_LIST
RESULT=$?

if [ $RESULT -ne 0 ]; then
    echo "Error: Failed to get file list from ESP32"
    echo "The 'run fs-list' command returned the following error:"
    echo "$FILE_LIST"
    echo ""
    echo "Please check your ESP32 connection and try again."
    rm "$TEMP_FILE" "$SELECTED_FILES" "$JSON_FILE" 2>/dev/null
    exit 1
fi

if [ -z "$FILE_LIST" ]; then
    echo "Error: The file list is empty."
    echo "Please check your ESP32 connection and try again."
    rm "$TEMP_FILE" "$SELECTED_FILES" "$JSON_FILE" 2>/dev/null
    exit 1
fi

if ! command -v node &> /dev/null; then
    echo "Error: node.js is not installed but required by this script."
    echo "Please install node.js using one of the following methods:"
    echo "  - macOS: brew install node"
    echo "  - Ubuntu/Debian: sudo apt-get install nodejs"
    echo "  - Fedora/RHEL: sudo dnf install nodejs"
    exit 1
fi

echo "$FILE_LIST" > "$JSON_FILE.raw"

echo "Parsing JSON data using JavaScript parser..."
if node "$SCRIPT_DIR/rm-visual-parsing.js" "$JSON_FILE.raw" "$TEMP_FILE"; then
    echo "Successfully parsed and processed the file list."
else
    echo "Error: Failed to parse the file list."
    echo "Raw output:"
    cat "$JSON_FILE.raw"
    rm "$TEMP_FILE" "$SELECTED_FILES" "$JSON_FILE"* 2>/dev/null
    exit 1
fi

if [ ! -s "$TEMP_FILE" ]; then
    echo "No files found or could not parse the file list."
    echo "Please check your ESP32 connection and try again."
    
    rm "$TEMP_FILE" "$SELECTED_FILES" "$JSON_FILE"* /tmp/esp32-children-*.json 2>/dev/null
    exit 1
fi

dialog --title "Select Files to Delete" \
       --backtitle "ESP32 File Manager" \
       --checklist "Use SPACE to select files, ENTER to confirm:" 25 80 20 \
       --file "$TEMP_FILE" 2> "$SELECTED_FILES"

if [ $? -ne 0 ]; then
    echo "Operation canceled."
    rm "$TEMP_FILE" "$SELECTED_FILES" "$JSON_FILE"* /tmp/esp32-children-*.json 2>/dev/null
    exit 0
fi

if [ -s "$SELECTED_FILES" ]; then
    # Remove quotes from the selected files
    SELECTED=$(cat "$SELECTED_FILES" | tr -d '"')
    
    # Count selected files
    FILE_COUNT=$(echo "$SELECTED" | wc -w)
    
    if [ "$FILE_COUNT" -gt 0 ]; then
        echo "You selected $FILE_COUNT file(s) to delete:"
        echo "$SELECTED"
        echo ""
        
        read -p "Are you sure you want to delete these files? (y/n): " confirm
        if [[ "$confirm" =~ ^[Yy]$ ]]; then
            for file in $SELECTED; do
                echo "Deleting $file..."
                ./run $RUN_ARGS rm "$file"
            done
            echo "Deletion complete."
        else
            echo "Operation canceled."
        fi
    else
        echo "No files selected."
    fi
else
    echo "No files selected."
fi

rm "$TEMP_FILE" "$SELECTED_FILES" "$JSON_FILE"* /tmp/esp32-children-*.json 2>/dev/null